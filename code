using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp14
{
    internal class Program
    {
        static void Main(string[] args)
        {
            BattleField battleField = new BattleField();

            battleField.MakeBattle();
        }
    }

    class Platoon
    {
        private List<Soldier> _soldiers = new List<Soldier>();
        public int Id { get; private set; }

        public Platoon(int id)
        {
            Id = id;
        }

        public void CreateSoldiers()
        {
            int minimalRandomBoostedHealth = 150;
            int maximalRandomBoostedHealth = 200;
            int minimalRandomBoostedDamage = 20;
            int maximalRandomBoostedDamage = 30;
            int boostedHealthType = 1;
            int boostedDamageType = 2;
            int TankType = 3;
            int minimalRandomNumberOfType = 1;
            int maximalRandomNumberOfType = 4;
            int randomNumberOfType;
            int randomNumber;
            int minimalRandomHealth = 80;
            int maximalRandomHealth = 120;
            int minimalNumberOfSoldiers = 20;
            int maximalNumberOfSoldiers = 30;
            int randomHealth;
            int minimalRandomDamage = 8;
            int maximalRandomDamage = 15;
            int randomDamage;

            randomNumber = UserUtils.GenerateRandomNumber(minimalNumberOfSoldiers, maximalNumberOfSoldiers);

            for (int i = 0; i < randomNumber; i++)
            {
                randomNumberOfType = UserUtils.GenerateRandomNumber(minimalRandomNumberOfType, maximalRandomNumberOfType);

                if (randomNumberOfType == boostedHealthType)
                {
                    randomHealth = UserUtils.GenerateRandomNumber(minimalRandomBoostedHealth, maximalRandomBoostedHealth);
                    randomDamage = UserUtils.GenerateRandomNumber(minimalRandomDamage, maximalRandomDamage);

                    Soldier soldier = new Soldier(randomHealth, randomDamage);

                    _soldiers.Add(soldier);
                }
                else if (randomNumberOfType == boostedDamageType)
                {
                    randomHealth = UserUtils.GenerateRandomNumber(minimalRandomHealth, maximalRandomHealth);
                    randomDamage = UserUtils.GenerateRandomNumber(minimalRandomBoostedDamage, maximalRandomBoostedDamage);

                    Soldier soldier = new Soldier(randomHealth, randomDamage);

                    _soldiers.Add(soldier);
                }
                else if (randomNumberOfType == TankType)
                {
                    randomHealth = UserUtils.GenerateRandomNumber(minimalRandomBoostedHealth, maximalRandomBoostedHealth);
                    randomDamage = UserUtils.GenerateRandomNumber(minimalRandomBoostedDamage, maximalRandomBoostedDamage);

                    Soldier soldier = new Soldier(randomHealth, randomDamage);

                    _soldiers.Add(soldier);
                }
                else
                {
                    randomHealth = UserUtils.GenerateRandomNumber(minimalRandomHealth, maximalRandomHealth);
                    randomDamage = UserUtils.GenerateRandomNumber(minimalRandomDamage, maximalRandomDamage);

                    Soldier soldier = new Soldier(randomHealth, randomDamage);

                    _soldiers.Add(soldier);
                }
            }
        }

        public List<Soldier> ReturnSoldiers()
        {
            List<Soldier> soldiers = _soldiers;

            return soldiers;
        }
    }

    class Soldier
    {
        public Soldier(int health, int damage)
        {
            Health = health;
            Damage = damage;
        }

        public int Health { get; private set; }
        public int Damage { get; private set; }

        public void TakeDamage(int damage)
        {
            Health -= damage;
        }

        public void Attack(Soldier soldier, int damage, int id1, int id2)
        {
            soldier.TakeDamage(damage);

            Console.WriteLine("Атакует боец из взвода " + id1);
            Console.WriteLine("Полученный солдатом взвода " + id2 + " урон - " + damage);
            Console.WriteLine("Осталось жизней - " + soldier.Health);
        }
    }

    class BattleField
    {
        private Platoon _platoon1 = new Platoon(1);
        private Platoon _platoon2 = new Platoon(2);

        public void MakeBattle()
        {
            int pickedRandomSoldier1 = 0;
            int pickedRandomSoldier2 = 0;

            _platoon1.CreateSoldiers();
            _platoon2.CreateSoldiers();

            while (_platoon1.ReturnSoldiers().Count > 0 && _platoon2.ReturnSoldiers().Count > 0)
            {
                pickedRandomSoldier1 = UserUtils.GenerateRandomNumber(0, _platoon1.ReturnSoldiers().Count - 1);
                pickedRandomSoldier2 = UserUtils.GenerateRandomNumber(0, _platoon2.ReturnSoldiers().Count - 1);

                _platoon1.ReturnSoldiers()[pickedRandomSoldier1].Attack(_platoon2.ReturnSoldiers()[pickedRandomSoldier2], _platoon1.ReturnSoldiers()[pickedRandomSoldier1].Damage, _platoon1.Id, _platoon2.Id);

                _platoon2.ReturnSoldiers()[pickedRandomSoldier2].Attack(_platoon1.ReturnSoldiers()[pickedRandomSoldier1], _platoon2.ReturnSoldiers()[pickedRandomSoldier2].Damage, _platoon2.Id, _platoon1.Id);

                if (_platoon1.ReturnSoldiers()[pickedRandomSoldier1].Health <= 0)
                {
                    Console.WriteLine("Боец первого взвода погиб");

                    _platoon1.ReturnSoldiers().Remove(_platoon1.ReturnSoldiers()[pickedRandomSoldier1]);
                }

                if (_platoon2.ReturnSoldiers()[pickedRandomSoldier2].Health <= 0)
                {
                    Console.WriteLine("Боец второго взвода погиб");

                    _platoon2.ReturnSoldiers().Remove(_platoon2.ReturnSoldiers()[pickedRandomSoldier2]);
                }
            }

            if (_platoon1.ReturnSoldiers().Count != 0)
            {
                Console.WriteLine("Победил первый взвод!");
            }
            else if (_platoon2.ReturnSoldiers().Count != 0)
            {
                Console.WriteLine("Победил второй взвод!");
            }
        }
    }

    class UserUtils
    {
        public static Random random = new Random();

        public static int GenerateRandomNumber(int minimalNumber, int maximalNumber)
        {
            int number;            

            number = random.Next(minimalNumber, maximalNumber);
            return number;
        }
    }
}
